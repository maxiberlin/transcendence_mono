
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream api {
        server backend:8000;
    }

    upstream pga {
        server pgadmin:8888;
    }

    server {
        listen 443 ssl;
        server_name pgadmin.localhost;
        include /etc/nginx/conf.d/ssl.conf;
        
        location / {
            proxy_pass http://pga;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }
    }

    server {
        listen 80;
        server_name ${NGINX_FRONTEND_URI} ${NGINX_BACKEND_URI};
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ${NGINX_FRONTEND_URI};
        include /etc/nginx/conf.d/ssl.conf;

        location /media/avatars {
            root /app/static;
            try_files $uri $uri/;
        }

        location / {
            root /var/www/pong_spa;
            try_files $uri /index.html;
        }
    }

    server {
        listen 443 ssl;
        server_name ${NGINX_BACKEND_URI};

        include /etc/nginx/conf.d/ssl.conf;

        location /ws/ {
            proxy_pass http://api;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection $connection_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            access_log /var/log/nginx/websocket_access.log detailed;
        }

        location / {
            proxy_pass http://api;
            client_max_body_size 100M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

