services:

  backend:
    build: ./transcendence_backend
    container_name: backend
    env_file: '.env'
    
    volumes:
      - backend_data:/app/
      - staticfiles:/app/static/
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  nginx:
    build:
      context: ./transcendence_frontend
      args:
        - VITE_BACKEND_URL=${BACKEND_URL}
        - VITE_FRONTEND_URL=${FRONTEND_URL}
        - VITE_GLOBAL_WEBSOCKET_URL=${GLOBAL_WEBSOCKET_URL}
        - NGINX_FRONTEND_URI=${NGINX_FRONTEND_URI}
        - NGINX_BACKEND_URI=${NGINX_BACKEND_URI}
    container_name: nginx
    volumes:
      - staticfiles:/app/static/
    ports:
      - "80:80"
      - "443:443"
    env_file: './.env'
    depends_on:
      - backend

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file: '.env'

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    env_file: '.env'
    volumes:
      - pgadmin-data:/var/lib/pgadmin



volumes:
  backend_data:
    name: backend_data
    driver: local
    driver_opts:
      device: ./transcendence_backend/backend
      o: bind
      type: none

  postgres-data:

  pgadmin-data:
  
  staticfiles:
      name: staticfiles
      driver: local
      driver_opts:
        device: ./transcendence_backend/static
        o: bind
        type: none

# networks:
#   default:
#     name: main_network