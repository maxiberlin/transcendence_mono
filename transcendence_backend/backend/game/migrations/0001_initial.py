# Generated by Django 5.0.3 on 2024-05-21 08:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0004_player_win_loss_margin_player_xp'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Tournament', max_length=30)),
                ('game_id', models.IntegerField(choices=[(0, 'Pong'), (1, 'Other')], null=True)),
                ('mode', models.CharField(max_length=50)),
                ('nb_player', models.IntegerField()),
                ('nb_rounds', models.IntegerField()),
                ('status', models.CharField(default='waiting', max_length=20)),
                ('started', models.DateTimeField(blank=True, null=True)),
                ('ended', models.DateTimeField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_creator', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(related_name='tournament_players', to='user.player')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(choices=[(0, 'Pong'), (1, 'Other')], null=True)),
                ('game_mode', models.CharField(max_length=20, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('scheduled', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('player_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_one', to='user.player')),
                ('player_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_two', to='user.player')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_gs', to='game.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='GameResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.CharField(max_length=10)),
                ('game_mode', models.CharField(max_length=20)),
                ('player_one_score', models.IntegerField()),
                ('player_two_score', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('loser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loser', to=settings.AUTH_USER_MODEL)),
                ('player_one', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_one', to=settings.AUTH_USER_MODEL)),
                ('player_two', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_two', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winner', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_name', to='game.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='GameRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(choices=[(0, 'Pong'), (1, 'Other')], null=True)),
                ('game_mode', models.CharField(max_length=20, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitee', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inviter', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_gr', to='game.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentLobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.CharField(default='First Round', max_length=30)),
                ('status', models.CharField(default='not started', max_length=20)),
                ('result', models.CharField(max_length=50)),
                ('player_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_as_player_one', to=settings.AUTH_USER_MODEL)),
                ('player_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_as_player_two', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_tl', to='game.tournament')),
            ],
        ),
    ]
